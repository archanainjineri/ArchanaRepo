package sparkcental;

import java.util.Stack;

public class Calculator {

	//Constructor
	public Calculator(){
		
	}

	public static void main(String[] args){
		
		Calculator calcObj = new Calculator();
		String expression = "1+1+2*3";
		char[] charExpression = expression.toCharArray();
		System.out.println("Expression "+expression+" is evaluated to " + calcObj.evalExpression(charExpression));
	
		
	}
	
	public int evalExpression(char[] input){
		Stack operandStack = new Stack();
		Stack operatorStack = new Stack();
		int op1 =0;
		int op2 = 0;
		char op = ' ';
		
		for( char c: input){
			if (Character.isDigit(c)){
				operandStack.push( Character.getNumericValue(c));
			}
			if (isOperator(c)){
				if(operatorStack.isEmpty())
				operatorStack.push(c);
				else{
					char temp = (char)operatorStack.peek();
					if(checkPopEligibility(c, temp)){
						op= (char)operatorStack.pop();
						op2=(int)operandStack.pop();
						op1 = (int)operandStack.pop();
						operandStack.push(getResult(op, op2,op1));
					}
					else{
						operatorStack.push(c);
					}
					
				}
			}
		}
		System.out.println(operandStack);
		System.out.println(operatorStack);
		
		int x =(int)operandStack.pop();
		int y = (int)operandStack.pop();
		int result  = Operation.ADD.calculate(x, y);
		return result;
	}

	public static boolean isOperator(char c){
		//if( c =='*' | c == '+' | c == '-' | c =='/' )
		if("+-*/".indexOf(c) != -1)
			return true;
		return false;
	}
	public int getResult(char op, int op2, int op1){
		int res = 0;
		if(op == '+')
			res = Operation.ADD.calculate(op1, op2);
		if(op == '-')
			res = Operation.SUB.calculate(op1, op2);
		if(op == '*')
			res = Operation.MULT.calculate(op1, op2);
		if(op == '/')
			res = Operation.DIV.calculate(op1, op2);
		return res;
			
	}
	
	  private int getPrecedence(char operator) {
          int ret = 0;
          if (operator == '-' || operator == '+') {
                  ret = 2;
          } else if (operator == '*' || operator == '/') {
                  ret = 1;
          }
          return ret;
  }
	public boolean checkPopEligibility(char inputChar, char topChar){
		return getPrecedence(inputChar) <= getPrecedence(topChar);
	}
	
}
