package sparkcental;

import java.util.Stack;

public class Calculator{

	public static void main(String[] args){
		
		Calculator calcObj = new Calculator();
		String expression = "2-2+4*2/1-2";
		char[] charExpression = expression.toCharArray();
		System.out.println("Expression "+expression+" is evaluated to " + calcObj.evalExpression(charExpression));
	}
	
	public int evalExpression(char[] input){
		Stack<Character> operandStack = new Stack<Character>();
		Stack<Character> operatorStack = new Stack<Character>();
		int op1 =0;
		int op2 = 0;
		char op = ' ';
		for( char c: input){
			if (Character.isDigit(c)){
				operandStack.push(c);
			}
			else if (isOperator(c)){
				if(operatorStack.isEmpty()){
					operatorStack.push(c);
				}	
				else{
					char temp = (char)operatorStack.peek();
					if(checkPopEligibility(c, temp)){
						while(!operatorStack.isEmpty()){
						op= (char)operatorStack.pop();
						op2=(int)operandStack.pop();
						op1 = (int)operandStack.pop();
						operandStack.push((char)getResult(op, op2,op1));			
				}
				operatorStack.push(c);
					}
					else{
						operatorStack.push(c);
					}
				}
			}
		}
		while(!operatorStack.isEmpty()){
		op= (char)operatorStack.pop();
		op2=(int)operandStack.pop();
		op1 = (int)operandStack.pop();
		operandStack.push(getResult(op, op2,op1));				
		}
			
		return (int)operandStack.pop();
	}

	public static boolean isOperator(char c){
		if("+-*/".indexOf(c) != -1){
			return true;
		}	
		return false;
	}
	public int getResult(char op, int op2, int op1){
		int res = 0;
		switch(op){
		case '+': 
				res = Operation.ADD.calculate(op1, op2);
				break;
		case '-':
				res = Operation.SUB.calculate(op1, op2);
				break;
		case '*':
				res = Operation.MULT.calculate(op1, op2);
				break;
		case '/':
				res = Operation.DIV.calculate(op1, op2);
				break;
		default: res = -1;
		}
		return res;
			
	}
	
	private int getPrecedence(char operator) {
          int precision = 0;
          if (operator == '-' || operator == '+') {
        	  precision = 1;
          } else if (operator == '*' || operator == '/') {
        	  precision = 2;
          }
          return precision;
  }
	public boolean checkPopEligibility(char inputChar, char topChar){
		boolean flag = false;
		if( getPrecedence(inputChar) <=getPrecedence(topChar))
			flag = true;
		else if( getPrecedence(inputChar) > getPrecedence(topChar))
			flag =false;
			
		return flag;
			
	}
	
}
