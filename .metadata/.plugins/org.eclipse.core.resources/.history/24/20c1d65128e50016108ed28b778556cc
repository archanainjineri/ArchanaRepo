package sparkcental;

import java.util.Stack;

public class Calculator {

	//Constructor
	public Calculator(){
		
	}

	public static void main(String[] args){
		
		Calculator calcObj = new Calculator();
		String expression = "2+3*2-2/2-1";
		char[] charExpression = expression.toCharArray();
		System.out.println("Expression "+expression+" is evaluated to " + calcObj.evalExpression(charExpression));
	
		
	}
	
	public int evalExpression(char[] input){
		Stack operandStack = new Stack();
		Stack operatorStack = new Stack();
		int op1 =0;
		int op2 = 0;
		char op = ' ';
			for( char c: input){
			if (Character.isDigit(c)){
				operandStack.push( Character.getNumericValue(c));
			}
			else if (isOperator(c)){
				if(operatorStack.isEmpty())
					operatorStack.push(c);
				else{
					while(!operatorStack.isEmpty()){
					char temp = (char)operatorStack.peek();
					if(checkPopEligibility(c, temp)){
						op= (char)operatorStack.pop();
						op2=(int)operandStack.pop();
						op1 = (int)operandStack.pop();
						operandStack.push(getResult(op, op2,op1));
					}
						operatorStack.push(c);
					}
					else{
						operatorStack.push(c);
					}
					
				}
			}
		}
		
			while(!operatorStack.isEmpty()){
				op= (char)operatorStack.pop();
				op2=(int)operandStack.pop();
				op1 = (int)operandStack.pop();
				operandStack.push(getResult(op, op2,op1));				
			}
		
		System.out.println(operandStack);
		System.out.println(operatorStack);
		
		return (int)operandStack.pop();
	}

	public static boolean isOperator(char c){
		//if( c =='*' | c == '+' | c == '-' | c =='/' )
		if("+-*/".indexOf(c) != -1)
			return true;
		return false;
	}
	public int getResult(char op, int op2, int op1){
		int res = 0;

		switch(op){
		case '+': 
			res = Operation.ADD.calculate(op1, op2);
			break;
		case '-':
				res = Operation.SUB.calculate(op1, op2);
				break;
		case '*':
				res = Operation.MULT.calculate(op1, op2);
				break;
		case '/':
				res = Operation.DIV.calculate(op1, op2);
				break;
		default:
			   res=999999;
		}
		return res;
			
	}
	
	  private int getPrecedence(char operator) {
          int ret = 0;
          if (operator == '-' || operator == '+') {
                  ret = 1;
          } else if (operator == '*' || operator == '/') {
                  ret = 2;
          }
          return ret;
  }
	public boolean checkPopEligibility(char inputChar, char topChar){
		boolean flag = false;
		if( getPrecedence(inputChar) <=getPrecedence(topChar))
			flag = true;
		else if( getPrecedence(inputChar) > getPrecedence(topChar))
			flag =false;
			
		return flag;
			
	}
	
}
